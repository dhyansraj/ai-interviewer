# AI Interviewer Nginx Gateway - Test Configuration
# Has both HTTP and HTTPS for health checks, no backend dependency

worker_processes auto;
error_log /usr/local/openresty/nginx/logs/error.log warn;
pid /tmp/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /usr/local/openresty/nginx/conf/mime.types;
    default_type application/octet-stream;

    # Temporary directories for nobody user
    client_body_temp_path /tmp/nginx/client_body_temp;
    proxy_temp_path /tmp/nginx/proxy_temp;
    fastcgi_temp_path /tmp/nginx/fastcgi_temp;
    uwsgi_temp_path /tmp/nginx/uwsgi_temp;
    scgi_temp_path /tmp/nginx/scgi_temp;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    # HTTP server block - for health checks and redirect to HTTPS
    server {
        listen 80;
        server_name _;
        root /usr/local/openresty/nginx/html;
        index index.html;

        # Health check endpoint (for k8s health checks)
        location /health {
            access_log off;
            return 200 "AI Interviewer Gateway - HTTP OK\n";
            add_header Content-Type text/plain;
        }

        # Redirect all other requests to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS server block
    server {
        listen 443 ssl;
        server_name _;
        root /usr/local/openresty/nginx/html;
        index index.html;

        # SSL configuration
        ssl_certificate /etc/ssl/certs/server.crt;
        ssl_certificate_key /etc/ssl/private/server.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers on;

        # Hide nginx version
        server_tokens off;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "AI Interviewer Gateway - HTTPS OK\n";
            add_header Content-Type text/plain;
        }

        # Serve static files
        location / {
            try_files $uri $uri/ /index.html;
        }
    }
}