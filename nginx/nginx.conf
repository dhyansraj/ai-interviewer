# nginx.conf - AI Interviewer NGINX configuration with Lua
worker_processes auto;
error_log stderr warn;
pid /tmp/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /usr/local/openresty/nginx/conf/mime.types;
    default_type application/octet-stream;

    # Lua package path for our OAuth scripts
    lua_package_path '/etc/nginx/lua/?.lua;;';
    lua_shared_dict sessions 10m;      # Session cache
    lua_shared_dict oauth_states 1m;   # OAuth state cache
    
    # Initialize DEV_MODE and OAuth config from environment
    init_by_lua_block {
        ngx.log(ngx.ERR, "Initializing with DEV_MODE: ", os.getenv("DEV_MODE") or "nil")
        _G.DEV_MODE = os.getenv("DEV_MODE") or "false"
        
        -- Initialize OAuth configuration
        _G.OAUTH_CONFIG = {
            google = {
                client_id = os.getenv("GOOGLE_CLIENT_ID"),
                client_secret = os.getenv("GOOGLE_CLIENT_SECRET")
            },
            github = {
                client_id = os.getenv("GITHUB_CLIENT_ID"),
                client_secret = os.getenv("GITHUB_CLIENT_SECRET")
            },
            microsoft = {
                client_id = os.getenv("MICROSOFT_CLIENT_ID"),
                client_secret = os.getenv("MICROSOFT_CLIENT_SECRET")
            },
            apple = {
                client_id = os.getenv("APPLE_CLIENT_ID"),
                client_secret = os.getenv("APPLE_CLIENT_SECRET")
            }
        }
        
        ngx.log(ngx.ERR, "Google Client ID: ", _G.OAUTH_CONFIG.google.client_id or "missing")
    }
    
    # DNS resolver for external API calls
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/javascript
        application/xml+rss
        application/json;

    # Log format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/stdout main;

    # Upstream for FastAPI backend (Phase 2)
    upstream fastapi_backend {
        server fastapi:8080;
        keepalive 32;
    }

    # Upstream for Frontend Next.js app
    upstream frontend_backend {
        server frontend:3000;
        keepalive 16;
    }

    # COMMENTED OUT: Upstream for Grafana (not running in Phase 2)
    # upstream grafana_backend {
    #     server grafana:3000;
    #     keepalive 8;
    # }

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name localhost interviewes.ai _;
        return 301 https://$server_name$request_uri;
    }

    # Main HTTPS server
    server {
        listen 443 ssl http2;
        server_name localhost interviewes.ai;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # DNS resolver for Lua scripts
        resolver 127.0.0.11 valid=30s;
        
        # Variable for bearer token
        set $bearer_token "";
        set $dev_mode "false";

        # Phase 2: Proxy to Frontend2 Next.js app (no auth required)
        location / {
            # Proxy to Frontend Next.js application
            proxy_pass http://frontend_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # Next.js specific headers
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
            
            # Timeouts for Next.js
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # COMMENTED OUT: Static files (old frontend build)
        # location / {
        #     root /usr/share/nginx/html;
        #     try_files $uri $uri/ /index.html;
        #     
        #     # Cache static assets
        #     location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        #         expires 1y;
        #         add_header Cache-Control "public, immutable";
        #     }
        # }

        # COMMENTED OUT: Login page (Phase 2 - no static files served)
        # location = /login.html {
        #     root /usr/share/nginx/html;
        # }

        # Health check endpoint
        location = /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # OAuth initiation endpoints
        location ~ ^/auth/(google|github|microsoft|apple)$ {
            content_by_lua_file /etc/nginx/lua/oauth_initiate.lua;
        }

        # OAuth callback endpoint
        location = /auth/callback {
            # Add resolver for this location to resolve Redis hostname
            resolver 127.0.0.11 valid=30s;
            content_by_lua_file /etc/nginx/lua/oauth_callback_simple.lua;
        }

        # Phase 2: API endpoints (with auth check enabled)
        location /api/ {
            # Auth check enabled - nginx will redirect to login if no valid session
            access_by_lua_file /etc/nginx/lua/auth_check.lua;
            proxy_set_header Authorization "Bearer $bearer_token";
            
            # Proxy to Phase 2 FastAPI backend
            proxy_pass http://fastapi_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # COMMENTED OUT: WebSocket endpoints (auth disabled for Phase 2)
        # location /ws/ {
        #     access_by_lua_file /etc/nginx/lua/auth_check.lua;
        #     
        #     # Pass real bearer token for WebSocket authentication
        #     proxy_set_header Authorization "Bearer $bearer_token";
        #     
        #     # WebSocket proxy configuration
        #     proxy_pass http://fastapi_backend;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "upgrade";
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     
        #     # WebSocket timeouts
        #     proxy_read_timeout 3600s;
        #     proxy_send_timeout 3600s;
        # }

        # Logout endpoint
        location = /logout {
            content_by_lua_file /etc/nginx/lua/logout.lua;
        }

        # COMMENTED OUT: Grafana proxy (not available in Phase 2)
        # location /grafana/ {
        #     # Proxy to Grafana service with subpath handling
        #     # proxy_pass http://grafana_backend;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_set_header X-Forwarded-Host $host;
        #     proxy_set_header X-Forwarded-Server $host;
        #     
        #     # WebSocket support for live updates
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "upgrade";
        #     
        #     # Additional headers for Grafana
        #     proxy_set_header X-Grafana-Org-Role Admin;
        #     
        #     # Timeouts for Grafana
        #     proxy_connect_timeout 60s;
        #     proxy_send_timeout 60s;
        #     proxy_read_timeout 60s;
        #     
        #     # Buffer settings for better performance
        #     proxy_buffering on;
        #     proxy_buffer_size 128k;
        #     proxy_buffers 4 256k;
        #     proxy_busy_buffers_size 256k;
        # }

        # Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}