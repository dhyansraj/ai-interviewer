# Local development Dockerfile using local MCP Mesh source
# For development and testing with local changes to MCP Mesh

FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Create non-root user matching the official runtime
RUN groupadd -r mcp-mesh && useradd -r -g mcp-mesh -m -s /bin/bash mcp-mesh

# Install system dependencies
RUN apt-get update && apt-get install -y \
    # Build tools for Python packages
    gcc \
    g++ \
    pkg-config \
    # Network utilities for health checks
    curl \
    # Clean up
    && rm -rf /var/lib/apt/lists/*

# Copy and install local MCP Mesh source
COPY --chown=mcp-mesh:mcp-mesh src/runtime/python/ ./mcp_mesh_local/
RUN cd mcp_mesh_local && pip install --no-cache-dir -e .

# Switch to non-root user
USER mcp-mesh

# Set environment variables for the agent
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    AGENT_NAME=llm-claude-agent \
    MCP_MESH_HTTP_PORT=8090 \
    LOG_LEVEL=DEBUG

# Copy agent source code and requirements
COPY --chown=mcp-mesh:mcp-mesh ai-interviewer/services/llm_agent/requirements.txt ./
COPY --chown=mcp-mesh:mcp-mesh ai-interviewer/services/llm_agent/ ./llm_agent/

# Create directories for processing (as non-root user)
USER root
RUN mkdir -p temp output logs cache && chown -R mcp-mesh:mcp-mesh temp output logs cache
USER mcp-mesh

# Install agent-specific dependencies
RUN pip install --no-cache-dir --user -r requirements.txt

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=20s --retries=3 \
    CMD curl -f http://localhost:${MCP_MESH_HTTP_PORT:-8090}/health || exit 1

# Expose the agent port
EXPOSE ${MCP_MESH_HTTP_PORT:-8090}

# Start the agent
CMD ["python", "-m", "llm_agent"]